# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Facebook\Facebook:
        arguments:
            -
                app_id: '%env(resolve:FACEBOOK_APP_ID)%'
                app_secret: '%env(resolve:FACEBOOK_APP_SECRET)%'
                default_graph_version: v3.0

    Reflex\Challonge\Challonge:
        arguments:
            - '%env(resolve:CHALLONGE_API_KEY)%'

    Zend\Crypt\BlockCipher:
        public: true
        factory: 'Zend\Crypt\BlockCipher::factory'
        arguments:
            - 'openssl'
            -
                algo: 'aes'
                mode: 'gcm'
        calls:
            - [ 'setKey', [ '%env(resolve:ENCRYPTION_KEY)' ] ]

    mediamonks_rest_api.serializer.jms_groups:
        class: App\Serializer\JMSSerializer
        arguments:
            - '@jms_serializer'
        public: true

    # Tactician bus handlers
    App\Bus\Handler\Event\GenerateRanksHandler:
        tags:
            - { name: "tactician.handler", typehints: true }
        calls:
            - ['setEntityManager', ['@doctrine.orm.entity_manager']]

    App\Bus\Handler\TournamentHandler:
        tags:
            - { name: "tactician.handler", typehints: true }
        calls:
            - ['setEntityManager', ['@doctrine.orm.entity_manager']]
